{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Structured Game Definition (SGD) v0.1",
  "description": "Schema for defining simple 2D grid-based games.",
  "type": "object",
  "properties": {
    "metadata": {
      "type": "object",
      "description": "General information about the game.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the game."
        },
        "description": {
          "type": "string",
          "description": "A brief description of the game."
        },
        "version": {
            "type": "string",
            "pattern": "^\\d+\\.\\d+\\.\\d+$",
            "description": "SGD version, e.g., 0.1.0"
        }
      },
      "required": ["name", "version"]
    },
    "grid": {
      "type": "object",
      "description": "Definition of the game grid.",
      "properties": {
        "width": {
          "type": "integer",
          "minimum": 1,
          "description": "Width of the grid in cells."
        },
        "height": {
          "type": "integer",
          "minimum": 1,
          "description": "Height of the grid in cells."
        },
        "default_tile": {
            "type": "string",
            "description": "Optional: Default appearance for an empty tile, e.g. '.' or a color."
        }
      },
      "required": ["width", "height"]
    },
    "entities": {
      "type": "array",
      "description": "List of all game entities.",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the entity."
          },
          "type": {
            "type": "string",
            "description": "Category of the entity (e.g., 'player', 'wall', 'goal', 'collectible', 'enemy')."
          },
          "appearance": {
            "type": "object",
            "description": "How the entity looks.",
            "properties": {
                "char": {"type": "string", "maxLength": 1, "description": "Single character representation."},
                "color": {"type": "string", "description": "Text color (e.g., 'red', '#FF0000')."},
                "background_color": {"type": "string", "description": "Background color."}
            },
            "required": ["char"]
          },
          "initial_position": {
            "type": "object",
            "properties": {
              "x": {"type": "integer", "minimum": 0},
              "y": {"type": "integer", "minimum": 0}
            },
            "required": ["x", "y"]
          },
          "properties": {
            "type": "object",
            "description": "Custom properties of the entity (e.g., 'is_solid', 'is_movable', 'health', 'score_value').",
            "additionalProperties": true
          }
        },
        "required": ["id", "type", "appearance", "initial_position"]
      }
    },
    "player_controls": {
      "type": "object",
      "description": "Mapping of player inputs to game actions.",
      "properties": {
        "default_player_id": {
            "type": "string",
            "description": "The ID of the entity considered the default player."
        }
      },
      "additionalProperties": {
        "type": "string",
        "description": "Action to perform (e.g., 'move_y(-1)' for up, 'interact'). Key is the input (e.g., 'ArrowUp')."
      },
      "required": ["default_player_id"]
    },
    "rules": {
      "type": "array",
      "description": "Game rules and interactions.",
      "items": {
        "type": "object",
        "properties": {
          "name": {"type": "string", "description": "Name of the rule."},
          "event": {
            "type": "string",
            "description": "When this rule is checked (e.g., 'on_player_move', 'on_collision', 'every_tick')."
          },
          "conditions": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Conditions to be met for the action to trigger (e.g., 'player.has_item(key)', 'entity_A.type == \"player\"')."
          },
          "actions": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Actions to perform (e.g., 'player.move_to(target.x, target.y)', 'game.add_score(10)', 'entity_B.destroy()')."
          }
        },
        "required": ["name", "event", "actions"]
      }
    },
    "win_conditions": {
      "type": "array",
      "description": "Conditions that result in a game win.",
      "items": {
        "type": "object",
        "properties": {
            "description": {"type": "string"},
            "condition_group_logic": {"type": "string", "enum": ["AND", "OR"], "default": "AND"},
            "conditions": {
                "type": "array",
                "items": {"type": "string"},
                "description": "List of conditions (e.g., 'player.position == [10,5]', 'score >= 100')."
            }
        },
        "required": ["description", "conditions"]
      }
    },
    "loss_conditions": {
      "type": "array",
      "description": "Conditions that result in a game loss.",
      "items": {
        "type": "object",
        "properties": {
            "description": {"type": "string"},
            "condition_group_logic": {"type": "string", "enum": ["AND", "OR"], "default": "AND"},
            "conditions": {
                "type": "array",
                "items": {"type": "string"},
                "description": "List of conditions (e.g., 'player.health <= 0', 'timer <= 0')."
            }
        },
        "required": ["description", "conditions"]
      }
    }
  },
  "required": ["metadata", "grid", "entities", "player_controls"]
}
