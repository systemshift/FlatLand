[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "flatland"
version = "0.1.0"
description = "A constraint-based logic engine for LLM-driven simulations"
readme = "readme.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = ["simulation", "logic-engine", "llm", "rules", "constraints"]
authors = [
  { name="systemshift", email="42102034+systemshift@users.noreply.github.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "numpy>=1.20.0",
    "typing-extensions>=4.0.0",
    "openai>=1.0.0",
    "jsonschema>=4.0.0",  # For schema validation
]

[project.optional-dependencies]
llm = [
    "openai>=1.0.0",
]

dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "flake8>=5.0.0",
    "responses>=0.23.0",  # For mocking OpenAI API in tests
    "pytest-asyncio>=0.21.0",  # For testing async OpenAI calls
]

[tool.setuptools.packages.find]
where = ["src"]
include = ["flatland*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=flatland --cov-report=term-missing"
filterwarnings = ["error"]
