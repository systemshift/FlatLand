[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "prompt_to_game_engine"
version = "0.1.0"
description = "A system to generate and play 2D games from natural language prompts using LLMs and MCP."
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"} # Assuming LICENSE file will be at project root
keywords = ["game-engine", "llm", "mcp", "prompt-driven", "2d-game"]
authors = [
  { name="systemshift", email="42102034+systemshift@users.noreply.github.com" }, # Or your details
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: BSD License", # Or your chosen license
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "typing-extensions>=4.7.0",
    "openai>=1.0.0",
    "jsonschema>=4.0.0",  # For SGD schema validation
    "Flask>=2.0.0",       # For the MCP server and Web UI backend
    "requests>=2.20.0"    # For services to call MCP server / other HTTP services
]

[project.optional-dependencies]
llm = [ # This group might be redundant if openai is in main dependencies
    "openai>=1.0.0",
]
# dev dependencies for linters, formatters, etc. can be added here later if needed

[tool.setuptools.packages.find]
where = ["src"]  # Look for packages in the 'src' directory
packages = ["flatland"] # Our main package is 'flatland'
# py_modules are for top-level .py files. mcp_server.py is in the root, not src.
# We'll list mcp_server as a top-level module separately if needed, or it can be run as a script.
# For now, focusing on making 'flatland' package installable.

[tool.setuptools]
py-modules = ["mcp_server"] # Explicitly declare mcp_server as an installable top-level module

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
